import React, { useState } from 'react';
import { Modal, Box, Tabs, Tab, TextField, Button, InputAdornment, IconButton, Typography } from '@mui/material';
import CloseIcon from '@mui/icons-material/Close';

const TabPanel = (props) => {
  const { children, value, index, ...other } = props;

  return (
    <div
      role="tabpanel"
      hidden={value !== index}
      id={`tabpanel-${index}`}
      aria-labelledby={`tab-${index}`}
      {...other}
    >
      {value === index && (
        <Box sx={{ p: 3 }}>
          {children}
        </Box>
      )}
    </div>
  );
};

const ConfigModal = ({ open, handleClose }) => {
  const [tabValue, setTabValue] = useState(1);  // Default to "User Config"

  const handleTabChange = (event, newValue) => {
    setTabValue(newValue);
  };

  const renderTextField = (label, defaultValue = '') => (
    <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
      <TextField
        fullWidth
        label={label}
        defaultValue={defaultValue}
        variant="standard"
        InputProps={{
          disableUnderline: true,
          startAdornment: (
            <InputAdornment position="start" sx={{ width: '150px' }}>
              {label}
            </InputAdornment>
          ),
        }}
      />
    </Box>
  );

  return (
    <Modal open={open} onClose={handleClose}>
      <Box
        sx={{
          position: 'absolute',
          top: '50%',
          left: '50%',
          transform: 'translate(-50%, -50%)',
          width: 500,
          bgcolor: 'background.paper',
          boxShadow: 24,
          p: 2,
          borderRadius: 2,
        }}
      >
        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>
          <Typography variant="h6">Configuration Settings</Typography>
          <IconButton onClick={handleClose}>
            <CloseIcon />
          </IconButton>
        </Box>
        
        <Tabs value={tabValue} onChange={handleTabChange} centered>
          <Tab label="Project Config" />
          <Tab label="User Config" />
        </Tabs>

        {/* Project Config Tab */}
        <TabPanel value={tabValue} index={0}>
          {renderTextField('Sandra Env:', 'rates_qa')}
          {renderTextField('Sandra Path:', '/Applications/qzratesqa/')}
          {renderTextField('Script Path:', 'C:\\AutomationScripts\\UIAutomation\\')}
          {renderTextField('OpenFinDriver Path:', 'C:\\AutomationScripts\\UIAutomation\\Appl')}
          {renderTextField('ChromeDriver Path:', 'C:\\AutomationScripts\\UIAutomation\\Appl')}
        </TabPanel>

        {/* User Config Tab */}
        <TabPanel value={tabValue} index={1}>
          {renderTextField('Sandra Env:', '/Applications/qzratesqa/')}
          {renderTextField('Sandra Path:')}
          {renderTextField('Script Path:')}
          {renderTextField('OpenFinDriver Path:')}
          {renderTextField('ChromeDriver Path:')}
          <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 2 }}>
            <Button variant="contained" color="primary">
              Save
            </Button>
          </Box>
        </TabPanel>
      </Box>
    </Modal>
  );
};

export default ConfigModal;
